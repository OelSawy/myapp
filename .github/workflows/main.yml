name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'latest'
          
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' 
          java-version: '17'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Run SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npx sonar-scanner \
            -Dsonar.projectKey=OelSawy_myapp \
            -Dsonar.organization=oelsawy \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: sonarcloud

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Podman
        run: |
          sudo apt-get update
          sudo apt-get install -y podman
          echo ${{ secrets.DOCKER_PASSWORD }} | podman login docker.io -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build Docker image using Podman
        run: |
          podman build -t oelsawy11/myapp:latest .
          podman push oelsawy11/myapp:latest 
      - name: Install Minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          sudo apt-get install -y containernetworking-plugins
      
      - name: Start Minikube
        run: |
          minikube start --driver=podman \
          --network-plugin=cni \
          --iso-url=https://github.com/coreos/minikube-iso/releases/download/v0.0.5/minikube-v0.0.5.iso
      
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
      
      - name: Verify Minikube and kubectl
        run: |
          minikube status
          kubectl cluster-info
          kubectl get nodes


      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
      
      - name: Verify Kubernetes Cluster
        run: kubectl cluster-info
      
      - name: Apply Kubernetes deployment
        run: |
          kubectl apply -f k8s/deployment.yaml --validate=false

